makeCacheMatrix <- function(x = matrix()) {
 inv <- NULL
set <- function(y) {
x <<- y
  inv <<- NULL
}
get <- function() x
get <- function() x
makeCacheMatrix <- function(x = matrix()) {
 inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get, setinv = setinv, getinv = getinv)
}
cacheSolve <- function(x, ...) {
 inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached result")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
source("ProgrammingAssignment2/cachematrix.R")
source("ProgrammingAssignment2/cachematrix.R")
m <- matrix(rnorm(16),4,4)
m1 <- makeCacheMatrix(m)
cacheSolve(m1)
source("ProgrammingAssignment2/cachematrix.R")
q()
